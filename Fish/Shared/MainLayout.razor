@inherits LayoutComponentBase
@inject ISettingsService SettingsService

<MudThemeProvider @ref="@_mudThemeProvider" IsDarkMode="@SettingsService.IsDarkMode" IsDarkModeChanged="SettingsService.SetDarkMode" Theme="_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private MudThemeProvider _mudThemeProvider;
    private MudTheme _theme = new();
    private bool _isDarkMode;

    protected override void OnInitialized()
    {
        SettingsService.DarkModeSettingChanged += DarkModeSettingChanged;
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await SettingsService.InitializeSettings();
            _isDarkMode = SettingsService.IsDarkMode;
            StateHasChanged();
        }
    }

    private void DarkModeSettingChanged(object sender, EventArgs e) => StateHasChanged();
}
