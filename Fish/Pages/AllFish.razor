@page "/"
@inject HttpClient Http

<PageTitle>All Fishes</PageTitle>

<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: right;
    }
</style>

@if (fishes == null)
{
    <MudText Class="py-12 px-8">Loading ... </MudText>
}
else
{
<MudTable Hover="true" Breakpoint="Breakpoint.Sm" FixedHeader="true"
          Items="@fishes"
          GroupBy="@_groupDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          GroupFooterClass="mb-4"
          Dense="true">
    <ColGroup>
        <col style="width: 60px;" />
        <col />
        <col />
        <col />
        <col />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh>Icon</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Hole</MudTh>
        <MudTh>Bait</MudTh>
        <MudTh>Time</MudTh>
    </HeaderContent>
    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.GroupName}: {context.Key}")</MudTh>
    </GroupHeaderTemplate>
    <RowTemplate>
        <MudTd DataLabel="Icon"><MudImage Src="@string.Format("data:image/png;base64,{0}", context.Icon)" Class="@("rarity-" + context.Rarity.ToLower())"></MudImage></MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Hole">@string.Join(',', context.Hole)</MudTd>
        <MudTd DataLabel="Bait">@string.Join(',', context.Bait)</MudTd>
        <MudTd DataLabel="Time">@string.Join(',', context.Time)</MudTd>
    </RowTemplate>
    <GroupFooterTemplate>
        <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Fish: @context.Items.Count()</MudTh>
    </GroupFooterTemplate>
</MudTable>
}


@code {

    private List<Models.Fish>? fishes;

    protected override async Task OnInitializedAsync()
    {
        fishes = await Http.GetFromJsonAsync<List<Models.Fish>>("fish-data/merged_fish.json");
    }

    private TableGroupDefinition<Models.Fish> _groupDefinition = new()
    {
        GroupName = "Group",
        Indentation = false,
        Expandable = true,
        Selector = (e) => string.Join(',', e.Area)
    };

}
